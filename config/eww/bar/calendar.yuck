; vars
(defvar reveal false)

; scripts
(defpoll time :interval "1m"
	      :initial "00:00"
	`date +%H:%M`)
(defpoll date :interval "1m"
	      :initial "1970-01-01"
	`echo " "$(date +%Y-%m-%d)" "`)

; widgets
(defwidget calendarLogo [Time]
  (box :class "calendarLogo"
       :space-evenly false
      (revealer :reveal {!Time}
                :duration "100ms"
                :transition "slideleft"
        (children :nth 0)) 
      (revealer :reveal {Time}
                :duration "100ms"
                :transition "slideleft"
        (children :nth 1)))) 

; Revealer on hover, using children
(defwidget calendarOnHover [Time fullDate ?class ?duration ?transition]
  (box :class "calendarOnHover"
       :orientation "h"
       :space-evenly false
    (eventbox :class "eventbox"
              :onhover "eww update ${fullDate}=true"
              :onhoverlost "eww update ${fullDate}=false"
      (box :space-evenly false
        (children :nth 0)
        (revealer :reveal Time
                  :transition {transition ?: "slideright"}
                  :duration {duration ?: "250ms"}
          (children :nth 1))
        (children :nth 2)))))


(defwidget hover-module [?class]
  (box :space-evenly false
       :class "hover-module"
    (calendarOnHover :class "hl-on-hover"
                       :Time reveal
                       :fullDate "reveal"
                       :transition "slideleft"
          
      (calendarLogo :Time reveal 
        "󱄴"
        "󱄵")
      "${date}"
      "${time}")))

(defwidget test-box [?color]
  (box :class "${color} test-box"
    :orientation "h"
    :halign "start"
    :hexpand false
    :space-evenly false
    :width 0))
